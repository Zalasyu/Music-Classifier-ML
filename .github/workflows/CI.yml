name: CI

on:
  push:
    branches: "**"
  pull_request:
    branches: "**"

# The jobs that will be run on a pull request to merge to main branch.
jobs:
  build:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      #----------------------------------------------
      # from: https://github.com/snok/install-poetry
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Cache poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: $ {{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        if: steps.cache.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
        shell: bash

      - name: Lint with flake8
        run: |

          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics

          # exit-zero treats all errors as warnings.
          poetry run flake8 . --exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

        - name: Run Tests
          run: poetry run pytest
