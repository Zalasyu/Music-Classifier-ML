
name: CI

# When do we want to run these jobs.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    shell: bash

permissions:
  contents: read

# The jobs that will be run on a pull request to merge to main branch.
jobs:
  Lint-with-flake8:
    name: Check Format
    runs-on: 'ubuntu-latest'
    steps:
      # Checks-out your repo under $GITHUB_WORKSPACE,
      # so your workflow can access it.
      - uses: actions/checkout@v3
      # Installs a version of Python or PyPy and adding it to PATH
      # Optionally caching dependencies for pip, pipenv, poetry
      - uses: actions/setup-python@v2
      # For checking format: Runs `black --check --diff` on the workflow
      # runner's clone of the repo and outputs an error code if any
      # Python file in the repo fails Black's formatting rules
      - uses: suo/flake8-github-action@releases/v1

  build:
    runs-on: ${{ matrix.os }}
    needs: Lint-with-flake8
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
          - 'windows-latest'
        python-version:
          - '3.9'
          - '3.10'

    steps:
      # Checkout the repo for this job and set up the Python Version
      - name: Checkout code
        uses: actions/checkout@v3

      # Python version is specified and points to matrix option
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      # Perma-cache Poetry since we only need it for checking pyproject version
      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.poetry
          key: ${{ matrix.os }}-poetry
      # Only runs when key from caching step changes
      - name: Install latest version of Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: dschep/install-poetry-action@v1.2
      # Poetry still needs to be re-prepended to the PATH on each run, since
      # PATH does not persist between runs.
      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Get Poetry version
        run: poetry --version

      - name: Check pyproject.toml validity
        run: poetry check --no-interaction
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2.1.5
        with:
          path: ${{github.workspace}}/.venv
          key: ${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ matrix.os }}-
      - name: Install deps
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      #- name: Run Tests
      #  run: poetry run pytest