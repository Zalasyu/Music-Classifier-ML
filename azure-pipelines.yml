# ##########
#
# A basic build against a single Python target
#
# The Azure Pipelines hierarchy goes [Pipeline] -> [Stages] -> [Jobs] -> [Steps]
# We only have 1 Stage and 1 Job, so we're using the shortcut syntax that includes only the properties for a single Job
#
# ##########

# We'll define some variables for later use
variables:
  pythonVersion: 3.10
  package: music-classifier-ml
  srcDirectory: src/$(package)
  testsDirectory: tests/

# Run on a Microsoft-hosted agent running Ubuntu-ltest
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops
pool:
  vmImage: ubuntu-latest

# Steps are the specific tasks that execute code and do things
steps:

# Use a specific Python version
- task: UsePythonVersion@0
  displayName: Use Python $(pythonVersion)
  inputs:
    versionSpec: $(pythonVersion)

- script: |
    curl -sSL https://install.python-poetry.org | python3 -
    export PATH=$PATH:$HOME/.poetry/bin
    poetry install --no-root
  displayName: 'Install dependencies'

- script: echo "##vso[task.prependpath]$HOME/.poetry/bin"
  displayName: Add poetry to PATH

- script: |
    poetry run flake8 src
    poetry run black src
  displayName: 'Linter'

- script: |
    poetry run pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
  displayName: 'Tests'

